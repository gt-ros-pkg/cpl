function n = n_planning_init( m )
%N_PLANNING_INIT Summary of this function goes here
%   Detailed explanation goes here


PORT_NUMBER = 54321;

n = struct;

% return;

%% cache cost functions
T = m.params.T;
n.cache_cost.cost_squareddist    = zeros(2*T + 1, 1);
n.cache_cost.cost_earlyexpensive = zeros(2*T + 1, 1);
n.cache_cost.cost_lateexpensive  = zeros(2*T + 1, 1);
for i=1:2*T + 1
    n.cache_cost.cost_squareddist(i)    = cost_squareddist(i-T-1);
    n.cache_cost.cost_earlyexpensive(i) = cost_earlyexpensive(i-T-1);
    n.cache_cost.cost_lateexpensive(i)  = cost_lateexpensive(i-T-1);
    n.cache_cost.cost_zeros(i)          = cost_zeros(i-T-1);
end


%% set up plans

plan1.events = struct( ...
            'signature', {111, 222, 333, 444, 98532, 324, 3214}, ...
            'name', {'Body', 'Nose_A', 'Nose_H', 'Body', 'Wing_H', 'Nose_A', 'Tail_H'}, ...
            'sname', {'Add Body', 'Add Nose_A', 'Add Nose_H', 'Remove Body', 'Add Wing_H', 'Remove Nose_A', 'Add Tail_H'}, ...
            'bin_id', {3, 11, 10, 3, 7, 11, 13}, ...
            'location', {'L11', 'L12', 'L13', 'L26', 'L11', 'L24', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution', 'start_distribution', ...
                     'end_distribution', 'start_distribution', 'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_lateexpensive', 'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 7) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 7) * 1 * 30 / m.params.downsample_ratio)));

plan2.events = struct( ...
            'signature', {111, 222, 333, 444, 555, 666, 777, 888, 1}, ...
            'name', {'Body', 'Nose_A', 'Nose_H', 'Body', 'Nose_H', 'Wing_AT', 'Wing_AD', 'Nose_A', 'Tail_AT'}, ...
            'sname', {'Add Body', 'Add Nose_A', 'Add Nose_H', 'Remove Body', 'Remove Nose_H', 'Add Wing_AT', 'Add Wing_AD', 'Remove Nose_A', 'Add Tail_AT'}, ...
            'bin_id', {3, 11, 10, 3, 10, 12, 2, 11, 14}, ...
            'location', {'L11', 'L12', 'L13', 'L26', 'L24', 'L11', 'L13', 'L36', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution', 'start_distribution', ...
                     'end_distribution', 'end_distribution', ...
                     'start_distribution', 'start_distribution', ...
                     'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_earlyexpensive', ...
                          'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 9) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 9) * 1 * 30 / m.params.downsample_ratio)));
        

plan3.events = struct( ...
            'signature', {111, 222, 333, 444, 555, 666, 777, 888, 2}, ...
            'name', {'Body', 'Nose_A', 'Nose_H', 'Body', 'Nose_H', 'Wing_AT', 'Wing_AD', 'Nose_A', 'Tail_AD'}, ...
            'sname', {'Add Body', 'Add Nose_A', 'Add Nose_H', 'Remove Body', 'Remove Nose_H', 'Add Wing_AT', 'Add Wing_AD', 'Remove Nose_A', 'Add Tail_AD'}, ...
            'bin_id', {3, 11, 10, 3, 10, 12, 2, 11, 15}, ...
            'location', {'L11', 'L12', 'L13', 'L26', 'L24', 'L11', 'L13', 'L36', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution', 'start_distribution', ...
                     'end_distribution', 'end_distribution', ...
                     'start_distribution', 'start_distribution', ...
                     'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_earlyexpensive', ...
                          'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 9) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 9) * 1  * 30 / m.params.downsample_ratio)));


n.init.plans = [plan1 plan2 plan3];


%% set up plans

plan1.events = struct( ...
            'signature', {111, 444, 222, 333, 98532, 324, 3214}, ...
            'name', {'Body', 'body6', 'Nose_A', 'Nose_H', 'Wing_H', 'Nose_A', 'Tail_H'}, ...
            'sname', {'Add Body', 'Remove Body6', 'Add Nose_A', 'Add Nose_H', 'Add Wing_H', 'Remove Nose_A', 'Add Tail_H'}, ...
            'bin_id', {3, 3, 11, 10, 7, 11, 13}, ...
            'location', {'L11', 'L26', 'L12', 'L13', 'L11', 'L24', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution', 'start_distribution', 'start_distribution', ...
                     'start_distribution', 'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_earlyexpensive', 'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_lateexpensive', 'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 7) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 7) * 1 * 30 / m.params.downsample_ratio)));

plan2.events = struct( ...
            'signature', {111, 444,222, 333,  555, 666, 777, 888, 1}, ...
            'name', {'Body', 'body6', 'Nose_A', 'Nose_H', 'Nose_H', 'Wing_AT', 'Wing_AD', 'Nose_A', 'Tail_AT'}, ...
            'sname', {'Add Body', 'Remove Body6','Add Nose_A', 'Add Nose_H',  'Remove Nose_H', 'Add Wing_AT', 'Add Wing_AD', 'Remove Nose_A', 'Add Tail_AT'}, ...
            'bin_id', {3, 3, 11, 10, 10, 12, 2, 11, 14}, ...
            'location', {'L11', 'L26','L12', 'L13',  'L24', 'L11', 'L13', 'L36', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution', 'start_distribution', 'start_distribution', ...
                     'end_distribution', ...
                     'start_distribution', 'start_distribution', ...
                     'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_earlyexpensive','cost_lateexpensive', 'cost_lateexpensive', ...
                           'cost_earlyexpensive', ...
                          'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 9) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 9) * 1 * 30 / m.params.downsample_ratio)));
        

plan3.events = struct( ...
            'signature', {111, 444, 222, 333,  555, 666, 777, 888, 2}, ...
            'name', {'Body', 'body6', 'Nose_A', 'Nose_H',  'Nose_H', 'Wing_AT', 'Wing_AD', 'Nose_A', 'Tail_AD'}, ...
            'sname', {'Add Body','Remove Body6',  'Add Nose_A', 'Add Nose_H', 'Remove Nose_H', 'Add Wing_AT', 'Add Wing_AD', 'Remove Nose_A', 'Add Tail_AD'}, ...
            'bin_id', {3, 3, 11, 10,  10, 12, 2, 11, 15}, ...
            'location', {'L11','L26', 'L12', 'L13',  'L24', 'L11', 'L13', 'L36', 'L12'}, ...
            'type', {'start_distribution', 'start_distribution','start_distribution', 'start_distribution', ...
                      'end_distribution', ...
                     'start_distribution', 'start_distribution', ...
                     'end_distribution', 'start_distribution'}, ...
            'cost_type', {'cost_lateexpensive', 'cost_earlyexpensive', 'cost_lateexpensive', 'cost_lateexpensive', ...
                           'cost_earlyexpensive', ...
                          'cost_lateexpensive', 'cost_lateexpensive', ...
                          'cost_earlyexpensive', 'cost_lateexpensive'}, ...
            'pre_duration', num2cell(int32(ones(1, 9) * 4 * 30 / m.params.downsample_ratio)), ...
            'post_duration', num2cell(int32(ones(1, 9) * 1  * 30 / m.params.downsample_ratio)));


n.init.plans = [plan1 plan2 plan3];

%% connect to ROS node
n.ros_tcp_connection                  = tcpip('localhost', PORT_NUMBER);
n.ros_tcp_connection.OutputBufferSize = 99999;
n.ros_tcp_connection.InputBufferSize  = 99999;
disp('Planner: Try connecting to ROS node....');
while 1
    try
        fopen(n.ros_tcp_connection)
        disp('Planner: Connected');
        break;
    catch e
        pause(1);
    end
end

end

